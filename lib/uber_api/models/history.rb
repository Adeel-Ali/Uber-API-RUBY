# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 05/09/2016

module UberApi
  class History

    # History item id
    # @return [String]
    attr_accessor :uuid

    # Time when requested
    # @return [Integer]
    attr_accessor :request_time

    # The product that was used
    # @return [String]
    attr_accessor :product_id

    # Status of the product e.g., completed
    # @return [String]
    attr_accessor :status

    # Distance travelled
    # @return [Float]
    attr_accessor :distance

    # Time of starting the journey
    # @return [Integer]
    attr_accessor :start_time

    # Location of starting the journey
    # @return [Location]
    attr_accessor :start_location

    # Time of journey end
    # @return [Integer]
    attr_accessor :end_time

    # Location where journey ended
    # @return [Location]
    attr_accessor :end_location

    def initialize(uuid = nil,
                   request_time = nil,
                   product_id = nil,
                   status = nil,
                   distance = nil,
                   start_time = nil,
                   start_location = nil,
                   end_time = nil,
                   end_location = nil)
      @uuid = uuid
      @request_time = request_time
      @product_id = product_id
      @status = status
      @distance = distance
      @start_time = start_time
      @start_location = start_location
      @end_time = end_time
      @end_location = end_location

    end

    def method_missing(method_name)
      puts "There is no method called '#{method_name}'."
    end

    # Creates JSON of the curent object
    def to_json
      hash = key_map
      hash.to_json
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        uuid = hash["uuid"]
        request_time = hash["request_time"]
        product_id = hash["product_id"]
        status = hash["status"]
        distance = hash["distance"]
        start_time = hash["start_time"]
        start_location = Location.from_hash(hash["start_location"])
        end_time = hash["end_time"]
        end_location = Location.from_hash(hash["end_location"])
        # Create object from extracted values
        History.new(uuid,
                    request_time,
                    product_id,
                    status,
                    distance,
                    start_time,
                    start_location,
                    end_time,
                    end_location)
      end
    end

    # Defines the key map for json serialization
    def key_map
      hash = {}
      hash['uuid'] = uuid
      hash['request_time'] = request_time
      hash['product_id'] = product_id
      hash['status'] = status
      hash['distance'] = distance
      hash['start_time'] = start_time
      hash['start_location'] = start_location.key_map
      hash['end_time'] = end_time
      hash['end_location'] = end_location.key_map
      hash
    end
  end
end
