# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 05/09/2016

module UberApi
  class RequestBody

    # The unique ID of the product being requested.
    # @return [String]
    attr_accessor :product_id

    # The beginning or "pickup" latitude.
    # @return [Float]
    attr_accessor :start_latitude

    # The beginning or "pickup" longitude.
    # @return [Float]
    attr_accessor :start_longitude

    # The final or destination latitude.
    # @return [Float]
    attr_accessor :end_latitude

    # The final or destination longitude.
    # @return [Float]
    attr_accessor :end_longitude

    # The unique identifier of the surge session for a user. Required when returned from a 409 Conflict response on previous POST attempt.
    # @return [String]
    attr_accessor :surge_confirmation_id

    def initialize(product_id = nil,
                   start_latitude = nil,
                   start_longitude = nil,
                   end_latitude = nil,
                   end_longitude = nil,
                   surge_confirmation_id = nil)
      @product_id = product_id
      @start_latitude = start_latitude
      @start_longitude = start_longitude
      @end_latitude = end_latitude
      @end_longitude = end_longitude
      @surge_confirmation_id = surge_confirmation_id

    end

    def method_missing(method_name)
      puts "There is no method called '#{method_name}'."
    end

    # Creates JSON of the curent object
    def to_json
      hash = key_map
      hash.to_json
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        product_id = hash["product_id"]
        start_latitude = hash["start_latitude"]
        start_longitude = hash["start_longitude"]
        end_latitude = hash["end_latitude"]
        end_longitude = hash["end_longitude"]
        surge_confirmation_id = hash["surge_confirmation_id"]
        # Create object from extracted values
        RequestBody.new(product_id,
                        start_latitude,
                        start_longitude,
                        end_latitude,
                        end_longitude,
                        surge_confirmation_id)
      end
    end

    # Defines the key map for json serialization
    def key_map
      hash = {}
      hash['product_id'] = product_id
      hash['start_latitude'] = start_latitude
      hash['start_longitude'] = start_longitude
      hash['end_latitude'] = end_latitude
      hash['end_longitude'] = end_longitude
      hash['surge_confirmation_id'] = surge_confirmation_id
      hash
    end
  end
end
