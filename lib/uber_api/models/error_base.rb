# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 05/09/2016

module UberApi
  class ErrorBase

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :meta

    # TODO: Write general description for this method
    # @return [List of Errors]
    attr_accessor :errors

    def initialize(meta = nil,
                   errors = nil)
      @meta = meta
      @errors = errors

    end

    def method_missing(method_name)
      puts "There is no method called '#{method_name}'."
    end

    # Creates JSON of the curent object
    def to_json
      hash = key_map
      hash.to_json
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        meta = hash["meta"]
        # Parameter is an array, so we need to iterate through it
        errors = nil
        if hash["errors"] != nil
          errors = Array.new
          hash["errors"].each{|structure| errors << Errors.from_hash(structure)}
        end
        # Create object from extracted values
        ErrorBase.new(meta,
                      errors)
      end
    end

    # Defines the key map for json serialization
    def key_map
      hash = {}
      hash['meta'] = meta
      hash['errors'] = errors.map(&:key_map)
      hash
    end
  end
end
